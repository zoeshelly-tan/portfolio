import { useCallback, useMemo, useState } from 'react';
export function useInput(initial = '') {
    const stringified = initial.toString();
    const [value, setValue] = useState(stringified);
    const onChange = useCallback((e) => setValue(e.target.value.toString()), []);
    const clear = useCallback(() => setValue(''), []);
    const hasValue = value !== undefined && value !== null && value.trim() !== '';
    const actions = useMemo(() => ({
        setValue,
        clear,
        onChange,
    }), [clear, onChange]);
    const values = useMemo(() => [value, hasValue], [hasValue, value]);
    return [values, actions];
}
export default useInput;
//# sourceMappingURL=useInput.js.map