import { useEffect, useRef, useState } from 'react';
export const useScript = ({ startLoading, onReady, onError, src, delay = 0 }) => {
    const isLoading = useRef(false);
    const [state, setState] = useState({
        ready: false,
        error: null,
    });
    useEffect(() => {
        if (startLoading && !isLoading.current) {
            setTimeout(() => {
                const script = document.createElement('script');
                script.src = src;
                script.onload = () => {
                    setState({ ready: true, error: null });
                    onReady === null || onReady === void 0 ? void 0 : onReady();
                };
                script.onerror = (error) => {
                    setState({ ready: false, error });
                    onError === null || onError === void 0 ? void 0 : onError(error);
                };
                document.body.appendChild(script);
                isLoading.current = true;
            }, delay);
        }
    }, [startLoading, delay, src, onReady, onError]);
    return state;
};
//# sourceMappingURL=useScript.js.map